file_name = ARGV.first
file = File.open(file_name)
n = file.readline.split(" ").first

$members = {}
$lc = 0
$hmc = 0

def get_name_and_number(line)
  return line.split(" ")[0], line.split(" ")[1]
end
  
start_time = Time.now

while(line = file.gets) do
  name, number_of_accused = get_name_and_number(line)
  
  if $members[name].nil?
    $members[name] = [[""], 0]
  end
  number_of_accused.to_i.times do
    accused_member = file.readline.split(" ").first
    if $members[accused_member]
      $members[accused_member][1] = $members[accused_member][1] + 1
    else
      $members[accused_member] = [[""], 1]
    end
    $members[name][0] << accused_member
  end
end

end_time = Time.now

puts end_time - start_time

def insert_liars(ms)
  ms.each do |l| 
    liar = $members[l]
    if liar
      $lc = $lc + 1
      $members.delete(l)
      insert_honest_members(liar[0])
    end
  end  
end

def insert_honest_members(ms)
  ms.each do |h| 
    honest_member = $members[h]
    if honest_member
      $hmc = $hmc + 1
      $members.delete(h)
      insert_liars(honest_member[0])
    end
  end
end

def find_next_honest_member(members)
  most_honest_member = members.first.to_a
  members.to_a.each do |m|
    most_honest_member = m if m[1][1] < most_honest_member[1][1]
    return most_honest_member if most_honest_member[1][1] == 0
  end

  most_honest_member
end

while($members.count > 0)
  m = find_next_honest_member($members)
  if m
    $hmc = $hmc + 1
    $members.delete(m[0])
    insert_liars(m[1][0])
  end
end


puts ($hmc > $lc) ? $hmc.to_s+" "+$lc.to_s : $lc.to_s+" "+$hmc.to_s+"\n"
